# stages:
#   merge:
#     cmd: python -m model_lab.merge_adapters ^
#             --base  models/hf/candidates/${params:run_name} ^
#             --out   models/hf/candidates/${params:run_name}_merged
#     deps:
#       - src/model_lab/merge_adapters.py
#       - models/hf/candidates/${params:run_name}
#     outs:
#       - models/hf/candidates/${params:run_name}_merged

#   gguf:
#     cmd: >
#       python -m model_lab.tools.convert_to_gguf
#       --in_model models/hf/candidates/${params:run_name}_merged
#       --out_file models/gguf/${params:run_name}_full.gguf
#       ${params:ci.quantize && "--quant Q4_0" || ""}
#     deps:
#       - src/model_lab/tools/convert_to_gguf.py
#       - models/hf/candidates/${params:run_name}_merged
#     outs:
#       - models/gguf/${params:run_name}_full.gguf

#   eval_ci:
#     cmd: python eval.py ^
#             --model   models/gguf/${params:run_name}_full.gguf ^
#             --dataset ${params:dataset.path} ^
#             --batch   ${params:eval.batch_size} ^
#             --max-len ${params:eval.max_length} ^
#             --offload
#     deps:
#       - eval.py
#       - models/gguf/${params:run_name}_full.gguf
#     metrics:
#       - metrics/eval_ci.json:
#           cache: false

#   docker:
#     cmd: scripts/build_image_ci.sh ${params:run_name}
#     deps:
#       - scripts/build_image_ci.sh
#       - models/gguf/${params:run_name}_full.gguf
#     outs:
#       - .ci/image_${params:run_name}.txt


stages:
  merge:
    cmd: |
      python -m model_lab.merge_adapters \
        --base models/hf/candidates/${params:run_name} \
        --adapter models/hf/candidates/${params:run_name} \
        --out models/hf/candidates/${params:run_name}_merged
    deps:
      - src/model_lab/merge_adapters.py
      - models/hf/candidates/${params:run_name}
    outs:
      - models/hf/candidates/${params:run_name}_merged

  gguf:
    cmd: |
      python -m model_lab.tools.convert_to_gguf \
        --in_model  models/hf/candidates/${params:run_name}_merged \
        --out_file  models/gguf/${params:run_name}_full.gguf
    deps:
      - src/model_lab/tools/convert_to_gguf.py
      - models/hf/candidates/${params:run_name}_merged
    outs:
      - models/gguf/${params:run_name}_full.gguf

  quant:
    when: ${params:ci.quantize}
    cmd: |
      python -m model_lab.tools.quantize_gguf \
        --in_file  models/gguf/${params:run_name}_full.gguf \
        --out_file models/gguf/${params:run_name}_${params:ci.quant_mode}.gguf
    deps:
      - src/model_lab/tools/quantize_gguf.py
      - models/gguf/${params:run_name}_full.gguf
    outs:
      - models/gguf/${params:run_name}_${params:ci.quant_mode}.gguf

  eval_ci:
    cmd: |
      python -m model_lab.eval \
        --model   models/hf/candidates/${params:run_name}_merged \
        --dataset ${params:dataset.path} \
        --batch   ${params:eval.batch_size} \
        --max-len ${params:eval.max_length} \
        --offload
    deps:
      - src/model_lab/eval.py
      - models/hf/candidates/${params:run_name}_merged
    metrics:
      - metrics/eval_ci.json:
          cache: false

  docker:
    cmd: scripts/build_image_ci.sh ${params:run_name}
    deps:
      - scripts/build_image_ci.sh
      - Dockerfile.serve
      - Modelfile
      - models/gguf/${params:run_name}_full.gguf
      - models/gguf/${params:run_name}_${params:ci.quant_mode}.gguf
    outs:
      - .ci/image_${params:run_name}.txt

